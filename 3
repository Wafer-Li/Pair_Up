#include "Map.h"
#include <time.h>

//Cont
Map::Map()
{
	//Initial the map structure
	for (int i = 0; i < MAX_SIZE; i++)
	{
		Piece list = Piece();
		maplists[i].push_front(list);
	}
}

//De
Map::~Map()
{
	/* ... */
}


//Method

//Initial the map
void Map::initMap()
{
	for (int i = 0; i < MAX_SIZE; i++)
	{
		for (j = 0; j < MAX_SIZE;j++)
		{
			Piece list = Piece();
			maplists[i].push_front(list);
		}
	}
}


//Swap
void Map::Swap(Piece & piece1, Piece & piece2)
{
	Piece temp;
	temp = piece1;
	piece1 = piece2;
	piece2 = temp;
}

//isDead
bool Map::isDead(int x, int y)
{
	bool flag = false;
	
	//Swap right
	Swap(maplists[x][y], maplists[x + 1][y]);
	if (judge(maplists[x][y]))
	{
		flag = false;
	}
	else
	{
		flag = true;
	}
	
	//Return same
	Swap(maplists[x][y], maplists[x + 1][y]);

	//Swap down
	Swap(maplists[x][y], maplists[x][y + 1]);
	if (judge(maplists[x][y]))
	{
		flag = false;
	}
	else
	{
		flag = true;
	}
	
	//Return same
	Swap(maplists[x][y], maplists[x][y + 1]);
	
	return flag;
}

//isPass
bool Map::getIsPass()
{
	return isPass;
}

void Map::setIsPass(int flag)
{
	isPass = flag;
}


//PassScore
int Map::getPassScore()
{
	return passScore;
}

void Map::setPassScore(int score)
{
	passScore = score;
}